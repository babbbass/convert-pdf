generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

model User {
  id                  String      @id @default(uuid()) 
  clerkUserId         String      @unique
  email               String      @unique
  firstName           String?
  lastName            String?
  profileImageUrl     String?
  isGuest             Boolean     @default(false)
  documents           Document[] 
  sentHistories       History[]   @relation("senderHistories")
  subscription        Subscription?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model Document {
  id              String        @id @default(uuid()) 
  isGuestDocument Boolean       @default(false)
  name            String        
  url             String  
  type            String        @default("Document_Comptable")      
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  history         History[]     
  createdAt       DateTime      @default(now())
}

model History {
  id          String    @id @default(uuid()) 
  document    Document  @relation(fields: [documentId], references: [id])
  documentId  String
  sender      User      @relation(fields: [senderId], references: [id], name:"senderHistories", onDelete: Cascade)
  senderId    String
  recipient   String    
  action      ActionType
  timestamp   DateTime  @default(now())
}

enum ActionType {
  SENT      
  DOWNLOADED 
}

model Subscription {
  id                String     @id @default(uuid())
  user              User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String     @unique

  status            String     // active, trialing, cancelled, etc.
  isActive          Boolean    @default(false)
  trialEndsAt       DateTime?
  currentPeriodEnd  DateTime?
  lemonsqueezyId    String     // LemonSqueezy ID (subscription_id)
  
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

enum SubscriptionStatus {
  ACTIVE
  INCOMPLETE
  TRIALING
  CANCELED
  EXPIRED
  PAST_DUE
}

